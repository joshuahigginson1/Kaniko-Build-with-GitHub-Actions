name: Trivy Scan Workflow
run-name: Trivy Scan Workflow by @${{ github.actor }}

# We want to run our scan on all pushes.
on:
  push:
    branches:
      - "*"

jobs:

  # ============= #
  #   SAST SCAN   #
  # ============= #

  # This job scans our working directory prior to building a Docker image to ensure that the repository's contents
  # is as safe as possible before exposing an image to your image registry.

  trivy-sast-scan:
    runs-on: ubuntu-24.04

    env:
      TRIVY_VERSION: 0.53.0

    permissions:
      security-events: write  # Permissions to write to the GitHub Repository Security Config.

    steps:

      #Â Clones the current repository without the need for an external action.
      - name: Git Clone
        run: |

          git clone --depth 1 --branch ${{ github.ref_name }} $(echo ${{ github.repositoryUrl }} | sed 's|git://|https://|') .    

      # Installs Trivy on host runner. NOTE: Sudo is required here, GitHub actions use passwordless sudo.
      - name: Install Trivy
        run: |
          echo "Updating APT cache..."
          sudo apt update

          echo "Installing Trivy..."
          wget -q https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.deb
          sudo dpkg -i trivy_${TRIVY_VERSION}_Linux-64bit.deb
          sudo rm trivy_${TRIVY_VERSION}_Linux-64bit.deb

          echo "TODO: Cache Trivy Database"

      # This job will never fail. It is designed to ALWAYS upload results.
      - name: Trivy File System Reporting Scan
        run: |
          echo "Commencing Trivy Reporting Scan..."
          trivy fs --exit-code 0 --license-full --scanners vuln,license,secret,misconfig ${{ github.workspace }} --format sarif -o trivy-fs-scan.sarif
          
          echo "Constructing payload for upload to GitHub."
          echo '{"commit_sha":"${{ github.sha }}","ref":"${{ github.ref }}","sarif":"'$(gzip -c trivy-fs-scan.sarif | base64 -w0)'"}' > sarif_payload.json

          echo "Uploading SARIF payload to GitHub."

          wget --method=POST \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --header "Content-Type: application/json" \
            --body-file=sarif_payload.json \
            --content-on-error \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/sarifs"

      # Rather than re-run our Trivy scan, we can simply use GREP to count for any issues.
      - name: Trivy Failure Gate
        run: |
          echo "Checking for CRITICAL issues..."
          grep -qE '"Severity": "CRITICAL"' trivy-fs-scan.sarif && echo "CRITICAL severity issues found in Trivy scan results. Please check the GitHub Code Scanning page for details." && exit 1
        
          echo "Checking for HIGH or CRITICAL issues..."
          grep -qE '"Severity": "HIGH"|"Severity": "CRITICAL"' trivy-fs-scan.sarif && echo "HIGH severity issues found in Trivy scan results. Please check the GitHub Code Scanning page for details." && exit 1

          echo "No HIGH or CRITICAL issues found by Trivy!"
